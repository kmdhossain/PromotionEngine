===============================================
Pseudo code

class PromotionScenatioCalculator (Scenario)
	Scenario Scenario
===============================================
Calculate Scenario 

foreach (scenarioItem in Scenario)
	if (scenarioItem.Product exists in Promotions)
		total += ApplyPromotion (scenarioItem)
	else
		total += scenarioItem.Product.Price * scenarioItem.Quantity

===============================================
Apply Promotion (scenarioItem)
	if (scenarioItem is in Single Product Promption)
		CalculateSingleProductPromotion (scenarioItem)
	else if (scenarioItem is the only item in Scenario)
		CalculateSingleProductPromotion (scenarioItem)
	else if (scenarioItem quantity exists partially in Promotion)
		CalculateSingleProductPromotion (scenarioItem.PartialQuanity without promotion)
	else // scenario item exists in multiple product promotion, all of which products is included in Scenario
		{
			if (scenarioItem is not the last item in promotion) return 0;

			load all products from promotion,
			load all products from scenario
			calculate total for this promotion
		}

===============================================

If product exists in single promotion product dictionary
	- Calculate single product promotion
Else if product exists in multiple product dictionary
	and all products in promotion exists in scenations
	- get all products in scenario, calculate total based on quantity
Else // no promotion to be applied
	- Calculate product * quantity

===============================================
Test cases
Check sum for empty scenario
Check sum for scenario with a product with no promotion
Check sum for for A, B, C only
Check sum for for AB, BC, AC combination

===============================================